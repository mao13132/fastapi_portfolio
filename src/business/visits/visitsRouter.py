from fastapi import APIRouter, Request
from typing import Dict, Any
import json
from datetime import datetime

from src.business.Contact.telegram import send_text_telegram

visitsRouter = APIRouter()


def format_value(value: Any) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏"""
    if value is None:
        return "–Ω–µ—Ç"
    if isinstance(value, (str, int, float, bool)):
        return str(value)
    if isinstance(value, dict):
        return format_dict(value)
    if isinstance(value, list):
        return ", ".join(format_value(item) for item in value)
    return str(value)


def format_dict(data: Dict[str, Any], indent: int = 0) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ª–æ–≤–∞—Ä—å –≤ —á–∏—Ç–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç"""
    result = []
    for key, value in data.items():
        if isinstance(value, dict):
            nested = format_dict(value, indent + 1)
            result.append(f"{'  ' * indent}üìå {key}:%0A{nested}")
        else:
            formatted_value = format_value(value)
            result.append(f"{'  ' * indent}üìå {key}: {formatted_value}")
    return "%0A".join(result)


def get_action_emoji(action: str) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –¥–µ–π—Å—Ç–≤–∏—è"""
    action = action.lower()
    if "–∫–ª–∏–∫" in action:
        return "üñ±Ô∏è"
    if "–ø—Ä–æ—Å–º–æ—Ç—Ä" in action:
        return "üëÄ"
    if "–æ—Ç–ø—Ä–∞–≤–∫–∞" in action:
        return "üì§"
    if "–∑–∞–≥—Ä—É–∑–∫–∞" in action:
        return "üì•"
    return "üîπ"


@visitsRouter.post("/visits")
async def track_visit(request: Request):
    """
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –ª—é–±—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ—Å–µ—â–µ–Ω–∏—è—Ö –∏ –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –∏—Ö –≤ Telegram
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è
        data = await request.json()
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏—è
        current_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        msg = f"üìä –ù–æ–≤–æ–µ –ø–æ—Å–µ—â–µ–Ω–∏–µ ({current_time})%0A%0A"
        
        # –ë–ª–æ–∫ —Å –¥–µ–π—Å—Ç–≤–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        action = data.get('action', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ')
        action_emoji = get_action_emoji(action)
        msg += f"üéØ {action_emoji} –î–µ–π—Å—Ç–≤–∏–µ:%0A{action}%0A%0A"
        
        # –ë–ª–æ–∫ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        if 'user' in data:
            user = data['user']
            msg += f"üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:%0A"
            msg += f"   üë§ –ò–º—è: {user.get('first_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')} {user.get('last_name', '')}%0A"
            msg += f"   üì± Username: {user.get('username', '–ù–µ —É–∫–∞–∑–∞–Ω')}%0A"
            msg += f"   üåê –Ø–∑—ã–∫: {user.get('language_code', '–ù–µ —É–∫–∞–∑–∞–Ω')}%0A%0A"
        
        # –ë–ª–æ–∫ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± —ç–ª–µ–º–µ–Ω—Ç–µ
        if 'element' in data:
            element = data['element']
            msg += f"üîç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —ç–ª–µ–º–µ–Ω—Ç–µ:%0A"
            msg += f"   üìù –¢–µ–∫—Å—Ç: {element.get('text', '–ù–µ—Ç')}%0A"
            msg += f"   üè∑Ô∏è –¢–∏–ø: {element.get('type', '–ù–µ—Ç')}%0A"
            msg += f"   üîó –°—Å—ã–ª–∫–∞: {element.get('href', '–ù–µ—Ç')}%0A%0A"
        
        # –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        msg += f"‚öôÔ∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:%0A"
        msg += f"   üåê URL: {data.get('url', '–ù–µ —É–∫–∞–∑–∞–Ω')}%0A"
        msg += f"   üíª –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {data.get('platform', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}%0A"
        msg += f"   ‚è∞ –í—Ä–µ–º—è: {data.get('timestamp', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}%0A"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
        res_send = await send_text_telegram(msg)

        return {"status": "success", "message": "OK"}
    except Exception as e:
        return {"status": "error", "message": str(e)}
