# ---------------------------------------------
# Program by @developer_telegrams
#
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
# Version   Date        Info
# 1.0       2024    Initial Version
#
# ---------------------------------------------
import asyncio
from sqlalchemy import update
from sqlalchemy.ext.asyncio import AsyncSession

from settings import SQL_URL
from src.sql.bd import async_session_maker, engine
from src.business.Works.works_table import Works
from src.start_data.bad_works_ import works_list
from src.utils._logger import logger_msg


async def update_works_by_slug():
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç —Ä–∞–±–æ—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ slug –∏–∑ —Å–ø–∏—Å–∫–∞ works_list.
    –û–±–Ω–æ–≤–ª—è–µ—Ç –ø–æ–ª—è: title, text, short_text, descriptions
    """
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç...")

    # –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    updated_count = 0
    not_found_count = 0
    error_count = 0

    try:
        async with async_session_maker() as session:
            # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–π —Ä–∞–±–æ—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞
            for work_data in works_list:
                try:
                    # –ü–æ–ª—É—á–∞–µ–º slug –∏–∑ –¥–∞–Ω–Ω—ã—Ö
                    slug = work_data.get('slug')
                    if not slug:
                        print(f"‚ö†Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–∞ —Ä–∞–±–æ—Ç–∞ –±–µ–∑ slug: {work_data.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
                        continue

                    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                    update_data = {
                        'title': work_data.get('title'),
                        'text': work_data.get('text'),
                        'short_text': work_data.get('short_text'),
                        'descriptions': work_data.get('descriptions')
                    }

                    # –£–¥–∞–ª—è–µ–º None –∑–Ω–∞—á–µ–Ω–∏—è
                    update_data = {k: v for k, v in update_data.items() if v is not None}

                    if not update_data:
                        print(f"‚ö†Ô∏è  –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å slug: {slug}")
                        continue

                    # –í—ã–ø–æ–ª–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
                    query = update(Works).where(Works.slug == slug).values(**update_data)
                    result = await session.execute(query)

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å
                    if result.rowcount > 0:
                        updated_count += 1
                        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ —Ä–∞–±–æ—Ç–∞: {slug} ({work_data.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')})")

                        # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
                        await logger_msg(f"–û–±–Ω–æ–≤–ª–µ–Ω–∞ —Ä–∞–±–æ—Ç–∞ —Å slug: {slug}", push=False)
                    else:
                        not_found_count += 1
                        print(f"‚ùå –†–∞–±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ë–î: {slug}")

                except Exception as work_error:
                    error_count += 1
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã {work_data.get('slug', 'unknown')}: {work_error}")
                    await logger_msg(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã {work_data.get('slug', 'unknown')}: {work_error}",
                                     push=True)

            # –ö–æ–º–º–∏—Ç–∏–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            await session.commit()

    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {e}")
        await logger_msg(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ update_works_by_slug: {e}", push=True)
        return False

    # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print("\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –û–ë–ù–û–í–õ–ï–ù–ò–Ø:")
    print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ä–∞–±–æ—Ç: {updated_count}")
    print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –ë–î: {not_found_count}")
    print(f"‚ö†Ô∏è  –û—à–∏–±–æ–∫: {error_count}")
    print(f"üìù –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {len(works_list)}")

    if updated_count > 0:
        print(f"\nüéâ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ {updated_count} —Ä–∞–±–æ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!")
    else:
        print("\n‚ö†Ô∏è  –ù–∏ –æ–¥–Ω–∞ —Ä–∞–±–æ—Ç–∞ –Ω–µ –±—ã–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞.")

    return True


async def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞
    """
    print("=" * 60)
    print("üîÑ –°–ö–†–ò–ü–¢ –û–ë–ù–û–í–õ–ï–ù–ò–Ø –†–ê–ë–û–¢ –í –ë–ê–ó–ï –î–ê–ù–ù–´–•")
    print("=" * 60)

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        print(f"üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î: {SQL_URL[:20]}...")

        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        success = await update_works_by_slug()

        if success:
            print("\n‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("\n‚ùå –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–∞–º–∏!")

    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞: {e}")
        await logger_msg(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ main: {e}", push=True)

    print("=" * 60)


if __name__ == "__main__":
    """
    –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Å–∫—Ä–∏–ø—Ç
    –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø—Ä—è–º–æ–º –≤—ã–∑–æ–≤–µ —Ñ–∞–π–ª–∞
    """
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    asyncio.run(main())
